Create a file in the root of your react-context solution
directory named flow.txt. For each feature in the application,
describe the flow of the code in writing, including the client,
server, and database. How does the code work?

User can sign up - The client sees a signup form containing the input for a username
and password. The user enters their credentials, if either input is empty, the form
will not get submitted and the user is required to enter a valid info. When a user
submits the correct format, they submit a post request to the http to generate a token
created by the argon2 and the jwt api, which serialize the user info in order to prevent
unauthorized users to access the user info.

User can sign in - Once a user successfully signed up, the user then submits a form
that checks the input submitted from the user. If the input is empty, they are required to
enter their valid credentials. Once the inputs are filled, the server checks the request's body
for the password, to see if it matches with the hashed password of the database. If the
user's inputs are invalid, the server sends a 404 status which is "not found" and the user is
required to retry to send the request to log in again. If the database's username and password
matches with the user's request to log in, the state gets updated that the user is authorized, and
the isAuthorizing boolean in the this.state object to be false, since the user is authorized already.
Then, they are given a JSON Web Token which gives them access to the user's data inside the database.

User can stay signed in (even if they refresh the page) - Since the user already signed in, they
have a token which grants them access to the data. Even if they reload the page, the state constantly
checks whether or not the user "is authorized", by checking the JWT in the user's local storage,
and confirming it is the same as the one generated by the api.

User can sign out - When a user clicks on sign out, the server deletes the saved token on
the user's local storage, and sets the user property on the this.state object to null. It also
toggles isAuthorizing back to true, since it would need to check the next user submission
to be correct or not.
